plugins {
    id 'java'
    id 'application'
}

group = 'org.icestormikk'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

application {
    mainClass = "Main"
}

tasks {
    var fatJar = tasks.register('fatJar', Jar) {
        dependsOn += ['compileJava', 'processResources']
        archiveClassifier.set('standalone')
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest {
            attributes 'Main-Class': application.mainClass
        }
        def sourcesMain = sourceSets.main
        def contents = configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } +
                sourcesMain.output
        from(contents)
    }
    build {
        dependsOn fatJar
    }
}

test {
    useJUnitPlatform()
}